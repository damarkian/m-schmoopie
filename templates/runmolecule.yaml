spec:
  templates:
  - name: run-molecule
    parent: generic-task
    inputs:
      parameters:
      - name: command
        value: python3 main.py
      artifacts:
      - name: main-script
        path: /app/main.py
        raw:
          data: |
            import os
            import h5py
            import json
            from openfermion.hamiltonians import MolecularData
            from openfermionpsi4 import run_psi4
            from schmoopie.qmolecule import make_geometry
 
            geometry = make_geometry()
            basis = 'sto-3g'
            charge = 0
            multiplicity = 1

            filename = '/app/moleculedata.hdf5'

            molecule = MolecularData(geometry, basis, multiplicity, charge, description, filename=filename)
    
            molecule = run_psi4(molecule, run_scf=1, run_mp2=1, run_cisd=0, run_ccsd=0, run_fci=0, verbose=1, tolerate_error=1)
            molecule.save()
            
            opd = {}
            opd["energy"] = str(molecule.hf_energy)
            opd["schema"] = "schmoopie-result"
            with open('/app/results.json', 'w') as f:
              f.write(json.dumps(opd))
    

            
    outputs:
      artifacts:
        - name: results
          path: /app/results.json
        - name: moleculedata
          path: /app/moleculedata.hdf5

